<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2021-12-13T15:51:44+00:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">oneweek-hi</title><subtitle>하나 둘 씩 정리해봅시다✨</subtitle><author><name>Han Juhui</name></author><entry><title type="html">[Project] Nuxt.js 프로젝트 시작하기</title><link href="http://localhost:4000/project/Setting-Nuxt.js-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0/" rel="alternate" type="text/html" title="[Project] Nuxt.js 프로젝트 시작하기" /><published>2021-12-13T00:00:00+00:00</published><updated>2021-12-13T13:06:00+00:00</updated><id>http://localhost:4000/project/%5BSetting%5D%20Nuxt.js%20%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%20%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0</id><content type="html" xml:base="http://localhost:4000/project/Setting-Nuxt.js-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0/">&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;친구와 프로젝트를 하나 시작해보려고 한다.😊&lt;/p&gt;

&lt;p&gt;이번에 프론트앤드로 Nuxt.js를 사용하게 되었다. ex) &lt;a href=&quot;https://nuxtjs.org/&quot; target=&quot;_blank&quot;&gt;NustJs 공식홈페이지&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;그래서 처음으로 프로젝트를 생성하고 실행하는 과정을 정리해보고자 한다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;yarn-설치하기&quot;&gt;yarn 설치하기&lt;/h2&gt;

&lt;div class=&quot;language-s highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#brew로 yarn 설치하기&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;brew&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;install&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;yarn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;#설치 되었는지 확인하기&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;yarn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/42812764/145818656-96a25c2a-d2ac-4874-9d89-4791f3f0714f.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위와 같이 설치가 되었음을 알 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;nextjs-프로젝트-만들기&quot;&gt;Next.js 프로젝트 만들기&lt;/h2&gt;

&lt;div class=&quot;language-s highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#프로젝트 만들기&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;#yarn create nuxt-app &amp;lt;프로젝트 이름&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;yarn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nuxt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;naem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;front&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/42812764/145819369-e4c778b7-0c70-44ed-bcd5-09e306853f48.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;중간에 필요한 옵션들을 설정해주면 아래와 같이 프로젝트가 생성됨을 확인 할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/42812764/145819510-ee15ed25-66d5-44ad-b4aa-ef20084991f5.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;nextjs-프로젝트-시작하기&quot;&gt;Next.js 프로젝트 시작하기&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#디렉토리 이동
$ cd bo-naem-front

#프로젝트 실행
$ yarn dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/42812764/145838793-12656acb-affe-4170-a1ad-776cb2976e78.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위의 사진과 같이 실행이 되면,&lt;/p&gt;

&lt;p&gt;아래 사진 처럼 주소창에 &lt;a href=&quot;http://localhost:3000/&quot; target=&quot;_blank&quot;&gt;localhost:3000&lt;/a&gt; 를 입력하면 Vuetify.js가 떠있는 것을 확인 할 수 있다.&lt;/p&gt;

&lt;p&gt;깔끔하게 프로젝트 생성 성공!✨&lt;/p&gt;

&lt;p&gt;&lt;img width=&quot;1480&quot; alt=&quot;스크린샷 2021-12-13 오후 10 20 50&quot; src=&quot;https://user-images.githubusercontent.com/42812764/145819959-2d257dd1-13d4-4b9a-a103-a30d292b7f64.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;🌿 Reference&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://fkkmemi.github.io/nuxt/nuxt-002-install/&quot; target=&quot;_blank&quot;&gt;fkkmemi.github.io&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://velog.io/@brviolet/Nuxt.js-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0-1.-%EC%84%A4%EC%B9%98&quot; target=&quot;_blank&quot;&gt;velog.io/@brviolet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Han Juhui</name></author><category term="Project" /><summary type="html">😊 Nuxt.js 처음 사용해보기</summary></entry><entry><title type="html">[Spring 강의] Spring 프로젝트 생성</title><link href="http://localhost:4000/spring%20%EA%B0%95%EC%9D%98/Spring-%EA%B0%95%EC%9D%98-Spring-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%83%9D%EC%84%B1/" rel="alternate" type="text/html" title="[Spring 강의] Spring 프로젝트 생성" /><published>2021-12-13T00:00:00+00:00</published><updated>2021-12-13T13:06:00+00:00</updated><id>http://localhost:4000/spring%20%EA%B0%95%EC%9D%98/%5BSpring%20%EA%B0%95%EC%9D%98%5D%20Spring%20%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%20%EC%83%9D%EC%84%B1</id><content type="html" xml:base="http://localhost:4000/spring%20%EA%B0%95%EC%9D%98/Spring-%EA%B0%95%EC%9D%98-Spring-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%83%9D%EC%84%B1/">&lt;h2 id=&quot;1-프로젝트-생성&quot;&gt;1. 프로젝트 생성&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/42812764/145776986-a9105748-005f-4d66-a8ae-6aa81a4fd40b.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;🌿 &lt;a href=&quot;https://start.spring.io/&quot; target=&quot;_blank&quot;&gt;Start spring&lt;/a&gt; 에 가서 프로젝트를 생성!&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;가장 안정화된 최신버전을 사용한다. (SNAPSHOT이나 M 버전은 아직 안정화 된 버전이 아님)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Artifact가 결과적으로 프로젝트 빌드명이 되는 것!&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;보통 Packaging은 jar을 사용한다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Dependencies는 아무것도 선택하지 않으면 코어 쪽 라이브러리만 가지고 가장 간단하게 구성해 준다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;그 후, zip파일을 다운로드 받은 뒤에 인텔리제이로 import 한다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/42812764/145779727-b7059279-1dc9-46ef-8931-f5d1575dd252.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;​		⇒ 실행 버튼을 눌렀을 때 잘 실행 되는 것을 확인 할 수 있다!&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Preferences &amp;gt; gradle &amp;gt; Build and run using을 Intellj IDEA로 바꾸어 주면 좀 더 빠르게 실행할 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img width=&quot;1094&quot; alt=&quot;스크린샷 2021-12-13 오후 5 45 36&quot; src=&quot;https://user-images.githubusercontent.com/42812764/145780097-5497c98e-90dc-4f2c-8f9f-1f452ea5de5c.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;🌿 인프런 &lt;a href=&quot;https://www.inflearn.com/course/%EC%8A%A4%ED%94%84%EB%A7%81-%ED%95%B5%EC%8B%AC-%EC%9B%90%EB%A6%AC-%EA%B8%B0%EB%B3%B8%ED%8E%B8&quot; target=&quot;_blank&quot;&gt;스프링 핵심 원리 기본편: 김영한&lt;/a&gt; 님의 강의를 듣고 정리한 내용입니다.&lt;/p&gt;</content><author><name>Han Juhui</name></author><category term="Spring 강의" /><summary type="html">🌿 스프링 핵심 원리/기본편:강의 정리2</summary></entry><entry><title type="html">[Setting] Java 버전 바꾸기</title><link href="http://localhost:4000/setting/Setting-Java%EB%B2%84%EC%A0%84%EB%B0%94%EA%BE%B8%EA%B8%B0/" rel="alternate" type="text/html" title="[Setting] Java 버전 바꾸기" /><published>2021-12-07T00:00:00+00:00</published><updated>2021-12-07T13:06:00+00:00</updated><id>http://localhost:4000/setting/%5BSetting%5D%20Java%EB%B2%84%EC%A0%84%EB%B0%94%EA%BE%B8%EA%B8%B0</id><content type="html" xml:base="http://localhost:4000/setting/Setting-Java%EB%B2%84%EC%A0%84%EB%B0%94%EA%BE%B8%EA%B8%B0/">&lt;h2 id=&quot;자바-버전-바꾸기&quot;&gt;자바 버전 바꾸기&lt;/h2&gt;

&lt;p&gt;Mac OS에는 여러 버전의 자바를 설치하고, 상황에 따라 버전을 바꾸어 가며 사용할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;자바-여러-버전-설치하는-방법&quot;&gt;자바 여러 버전 설치하는 방법&lt;/h2&gt;

&lt;p&gt;내가 사용 했던 방식은 총 두가지 이다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;홈페이지 가서 다운로드 받기&lt;/li&gt;
  &lt;li&gt;homebrew로 설치하기&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;1-홈페이지-가서-다운로드-받기&quot;&gt;1. 홈페이지 가서 다운로드 받기&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://www.oracle.com/java/technologies/downloads/&quot; target=&quot;_blank&quot;&gt; ☕️ Java 홈페이지 &lt;/a&gt;에 가서 자신이 필요한 파일을 다운로드 받은 후, dmg를 설치하면된다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;2-homebrew로-설치하기&quot;&gt;2. homebrew로 설치하기&lt;/h3&gt;

&lt;p&gt;아래의 명령어를 순차적으로 입력하면 된다.&lt;/p&gt;

&lt;div class=&quot;language-s highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#brew update하기&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;brew&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;#adoptopenjdk/openjdk 추가하기&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;brew&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tap&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;adoptopenjdk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;openjdk&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;#설치 가능한 모든 JDK 찾기&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;brew&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jdk&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;#원하는 버전 설치 하기 &lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;brew&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;install&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cask&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;adoptopenjdk14&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;위의 두가지 방법으로 설치 하면 아래와 같은 결과를 얻을 수 있다.&lt;/p&gt;

&lt;div class=&quot;language-s highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#현재 설치된 자바 버전 보기&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;usr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;libexec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;java_home&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/42812764/145034118-c086f252-8a67-40c3-97f3-55c2d968740e.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;자바-버전-바꾸기-1&quot;&gt;자바 버전 바꾸기&lt;/h2&gt;

&lt;p&gt;자바의 버전을 먼저 확인하고, 위에서 확인한 이미 필요한 버전을 확인한 후 변경해 주면 된다.&lt;/p&gt;

&lt;div class=&quot;language-s highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#Java 버전 확인하기&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/42812764/145034000-aec5e92a-667a-45e9-92c1-3af1ea603ead.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;그후 .zshrc를 수정해서 환경 변수를 수정해 주면 된다.&lt;/p&gt;

&lt;div class=&quot;language-s highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#.zshrc파일 열기&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vi&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;~/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;.zshrc&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;


&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;#맨 아래에 추가해주기&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;export&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;JAVA_HOME_11&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;usr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;libexec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;java_home&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;export&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;JAVA_HOME_14&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;usr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;libexec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;java_home&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;export&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;JAVA_HOME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;JAVA_HOME_14&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;export&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;$PATH:$HOME/.rvm/bin&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;


&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# 적용시키기&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;~/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;.zshrc&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;그럼 아래과 같이 버전이 변경 된 것을 확인 할 수 있다!&lt;/p&gt;

&lt;p&gt;생각보다 간단해서 겁먹지 말고 슉슉 바꾸면 될 듯하다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/42812764/145031700-5546f61f-0ddb-4941-819f-92564fb1b2d4.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/42812764/145032367-1363ba1a-430b-44b3-817d-13f3037bdf9f.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;🌿 Reference&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://llighter.github.io/install-java-on-mac/&quot; target=&quot;_blank&quot;&gt;llighter.github.io&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://yoonpunk.tistory.com/11&quot; target=&quot;_blank&quot;&gt;yoonpunk.tistory.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Han Juhui</name></author><category term="Setting" /><summary type="html">☕️ Java 버전 바꾸는 방법 for Mac</summary></entry><entry><title type="html">[Spring 강의] Spring이란?</title><link href="http://localhost:4000/spring%20%EA%B0%95%EC%9D%98/Spring-%EA%B0%95%EC%9D%98-Spring%EC%9D%B4%EB%9E%80/" rel="alternate" type="text/html" title="[Spring 강의] Spring이란?" /><published>2021-12-06T00:00:00+00:00</published><updated>2021-12-06T13:06:00+00:00</updated><id>http://localhost:4000/spring%20%EA%B0%95%EC%9D%98/%5BSpring%20%EA%B0%95%EC%9D%98%5D%20Spring%EC%9D%B4%EB%9E%80</id><content type="html" xml:base="http://localhost:4000/spring%20%EA%B0%95%EC%9D%98/Spring-%EA%B0%95%EC%9D%98-Spring%EC%9D%B4%EB%9E%80/">&lt;h2 id=&quot;1-spring-이란&quot;&gt;1. Spring 이란?&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/42812764/144845101-cd05d2e2-984c-46bd-85bb-da52dbddc32f.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Spring 은 특정한 하나를 뜻하는게 아니라, 여러 기술들의 모음이라고 볼 수 있다. Ex) &lt;a href=&quot;https://spring.io/&quot; target=&quot;_blank&quot;&gt; 스프링 홈페이지 &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;스프링 프레임워크, 스프링 부트를 포함하여, 프스필 데이터, 스프링 세션, 스프링 시큐리티 등..을 포함한다.&lt;/p&gt;

&lt;p&gt;가장 큰 핵심은 스프링 프레임워크이고 ,이를 편리하게 쓸 수 있도록 하는게 스프링 부트이다.&lt;/p&gt;

&lt;p&gt;요즘은 스프링 부트를 주로 활용해서 스프링 프레임워크를 사용한다고 한다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;spring-프레임-워크-기능들&quot;&gt;Spring 프레임 워크 기능들&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;핵심 기술: 스프링 DI 컨테이너, AOP, 이벤트, 기타&lt;/li&gt;
  &lt;li&gt;웹기술: 스프링 MVC, 스프링 WebFlux&lt;/li&gt;
  &lt;li&gt;데이터 접근 기술: 트랜잭션, JDBC, ORM 지원, XML 지원&lt;/li&gt;
  &lt;li&gt;기술 통합: 캐시, 이메일, 원격 접근, 스케줄링&lt;/li&gt;
  &lt;li&gt;테스트: 스프링 기반 테스트 지원&lt;/li&gt;
  &lt;li&gt;언어: 코틀린, 그루비&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;스프링 부트는 웹 서버를 내장하고 있기 때문에 따로 웹서버를 설치 않아도 되는 장점이 있다.&lt;/p&gt;

&lt;p&gt;또한 starter가 외부 라이브러리도 다 알아서 끌어와주며  외부 라이브러리 버전 최적화가 되어있고, 메트릭 모니터링등을 지원해준다는 장점이 있어서 최근에 기본으로 사용 된다고 한다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;하지만, 스프링 부트를 사용한다는 뜻이 스프링 부트와 스프링 프레임워크와 별도로 사용한다는 뜻이 아니다.&lt;/p&gt;

&lt;p&gt;스프링 부트를 도와주는 프로그램이라고 생각하면 된다!&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;그렇다면-스프링을-왜-만들었을까&quot;&gt;그렇다면 스프링을 왜 만들었을까?&lt;/h3&gt;

&lt;p&gt;Spring은 자바 언어 기반의 프레임워크로, 객체지향 언어가 가진 강력한 특징을 살려내는 프레임 워크이다.&lt;/p&gt;

&lt;p&gt;즉, 좋은 객체 지향 어플리케이션을 개발할 수 있도록 도와주는 프레임워크이다!&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;기술의 핵십 컨셉은 항상 단순하게 시작하는 것이다. 이 컨셉이 좋으면 점점 살이 붙으면서 커지는 것이다.&lt;/p&gt;

&lt;p&gt;Spring은 로드 존슨의 3만줄에서 시작되었다✨&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-좋은-객체-지향-프로그래밍&quot;&gt;2. 좋은 객체 지향 프로그래밍?&lt;/h2&gt;

&lt;h3 id=&quot;객체-지향-프로그래밍&quot;&gt;객체 지향 프로그래밍&lt;/h3&gt;

&lt;p&gt;⇒ 객체들의 모임으로 프로그램을 이해하는 것. 즉 객체들이 서로 메세지, 데이터 를 주고 받고 협력을 하는 것&lt;/p&gt;

&lt;p&gt;⇒ 유용하고 &lt;strong&gt;변경&lt;/strong&gt;이 용이한 장점이 있다.&lt;/p&gt;

&lt;p&gt;⇒ 부품을 갈아끼우듯이 프로그래밍을 할 수 있다는 것@!&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;다형성polymorphism&quot;&gt;다형성(Polymorphism)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;실세계의 자동차를 예로 들어보자.&lt;/p&gt;

    &lt;p&gt;운전자와 자동차가 있을 때, 주인이 자동차를 바꾸더라도 운전을 하는데 문제가 없다.&lt;/p&gt;

    &lt;p&gt;여기서 자동차를 바꾸는 게 다형성이 의미하는 것이다.&lt;/p&gt;

    &lt;p&gt;&lt;br /&gt;&lt;/p&gt;

    &lt;p&gt;⇒ 자동차 역할의 인터페이스가 정해져있고 이것에 따라 만들었기 때문에, 클라이언트가 내부 구조를 알 필요가 없고 객체가 자신의 역할을 하고 있다면 문제가 없다.&lt;/p&gt;

    &lt;p&gt;⇒ 즉, 역할과 구현으로 세상을 구분했기 때문에, 새로운 자동차가 나와도 클라이언트는 운전을 새로 배우지 않아도 된다.&lt;/p&gt;

    &lt;p&gt;⇒ 자동차의 세계를 무한히 확장 가능한 것이다.&lt;/p&gt;

    &lt;p&gt;⇒  &lt;strong&gt;클라이언트에게 영향을 주지 않고 새로운 기능을 제공 할 수 있는 것이다!&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;&lt;br /&gt;&lt;/p&gt;

    &lt;p&gt;다른 예시 ex) 공연 무대(각 주인공이 자기 역할만 제대로 소화하면 상대방이 누구든 문제가 없다.), 키보드, 마우스 등등&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;역할과 구현을 분리&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;세상이 단순해지고,유연해지며 변경도 편리해진다.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;클라이언트는  대상의 역할(인터페이스)만 알면 된다.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;클라이언트는 구현 대상의 내부 구조를 몰라도 된다.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;클라이언트는 구현 대상의 내부 구조가 변경되어도 영향을 받지 않는다.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;클라이언트는 구현 대상 자체를 변경해도 영향을 받지 않는다.&lt;/p&gt;

        &lt;p&gt;&lt;br /&gt;&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;이걸 자바에 적용 하면 아래와 같이 정의가 가능하다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;역할 = 인터페이스&lt;/li&gt;
  &lt;li&gt;구현 = 인터페이스를 구현한 클래스, 구현 객체&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;프로그램은 객체의 협력이라는 관계부터 생각해야 한다.&lt;/p&gt;

&lt;p&gt;혼자 있는 객체는 없고, 수 많은 객체 클라이언트와 객체 서버는 서로 협력 관계를 가진다.&lt;/p&gt;

&lt;p&gt;구현보다 인터페이스가 먼저이고, 협력이라는 관계에서 시작하는 것이 다용성의 본질이다!&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;정리하자면-역할과-구현을-분리-하는-것은&quot;&gt;정리하자면, 역할과 구현을 분리 하는 것은&lt;/h3&gt;

&lt;h4 id=&quot;장점&quot;&gt;장점&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;실세계의 역할와 구현이라는 편리한 컨셉을 다형성을 통해 객체 세상으로 가져올 수 있음&lt;/li&gt;
  &lt;li&gt;유연하고, 변경이 용이&lt;/li&gt;
  &lt;li&gt;확장 가능한 설계&lt;/li&gt;
  &lt;li&gt;클라이언트에 영향을 주지 않는 변경이 가능&lt;/li&gt;
  &lt;li&gt;인터페이스를 안정적으로 잘 설계하는 것이 중요!&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;한계&quot;&gt;한계&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;역할(인터페이스)자체가 변하면, 클리아언트, 서버 모두에 큰 변경이 발생&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;u&gt;인터페이스를 제대로 설계 하는게 가장 중요하다.&lt;/u&gt;&lt;/p&gt;

&lt;p&gt;이후에 가장 크게 변하지 않고 기능 업데이트 및 추가 가능하기 때문이다.&lt;/p&gt;

&lt;p&gt;객체 지향의 꽃은 다형성이고, 스프링은 이를 극대화 할 수 있도록 도와주는 것이다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;3-좋은-객제지향-설계의-5가지-원칙solid&quot;&gt;3. 좋은 객제지향 설계의 5가지 원칙(SOLID)&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;sold--클린-코드로-유명한-로버트-마틴이-좋은-객체-지향-설계의-5가지-원칙을-정리&quot;&gt;SOLD : 클린 코드로 유명한 로버트 마틴이 좋은 객체 지향 설계의 5가지 원칙을 정리&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;SRP: 단일 책임 원칙(single responsibility principle)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;OCP: 개방-폐쇄 원칙 (Open/closed principle)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;LSP: 리스코프 치환 원칙 (Liskov substitution principle)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;ISP: 인터페이스 분리 원칙 (Interface segregation principle)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;DIP: 의존관계 역전 원칙 (Dependency inversion principle)&lt;/p&gt;

    &lt;p&gt;*앞글자를 따서 만듬&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;-srp-단일-책임-원칙&quot;&gt;📝 SRP: 단일 책임 원칙&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;한 클래스는 하나의 책임만 가져야 한다. (문맥과 상황에 따라 다르다)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;중요한 기준은 &lt;strong&gt;변경&lt;/strong&gt;이다. 변경이 있을 때 파급 효과가 적으면 단일 책임 원칙을 잘 따른 것&lt;/p&gt;

    &lt;p&gt;⇒ 기능이 업데이트, 추가 될때 얼마나 변경이 적게 필요한지가 중요 포인트&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Ex) UI 변경, 객체의 생성과 사용을 분리  ⇒ 적절하게 조절하는게 묘미이다.&lt;/p&gt;

    &lt;p&gt;&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;-ocp-개방-폐쇄-원칙---️중요&quot;&gt;📝 OCP: 개방-폐쇄 원칙   ✔️중요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;소프트웨어 요소는 확장에 열려 있지만 변경에는 닫혀 있어야 한다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;구현 객체를 변경하려면 클라이언트의 코드를 변경해야 하는 경우가 생긴다.&lt;/p&gt;

    &lt;p&gt;이럴때는 다형성을 활용해야 한다! ⇒ 객체를 생성하고 연관관계를 맺어주는 별도의 조립, 설정자가 필요하다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;-lsp-리스코프-치환-원칙&quot;&gt;📝 LSP: 리스코프 치환 원칙&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;간단히 말하자면, 어떤 인터페이스가 있고 구현체가 있다면 인터페이스의 의도와 같이 만들어야 한다.&lt;/p&gt;

    &lt;p&gt;즉, 기능적으로 보장을 해야 하는 것이다.&lt;/p&gt;

    &lt;p&gt;⇒ 자동차의 엑셀을 밟으면 뒤로 가는게 아니라 앞으로 가야한다. 느리더라도 앞으로 가는게 맞는 것!&lt;/p&gt;

    &lt;p&gt;&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;-isp-인터페이스-분리-원칙&quot;&gt;📝 ISP: 인터페이스 분리 원칙&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;간단히 말하자면 인터페이스를 작게 나누는 것이라 볼 수 있다.&lt;/p&gt;

    &lt;p&gt;자동차 인터페이스 → 운전 인터페이스, 정비 인터페이스로 분리&lt;/p&gt;

    &lt;p&gt;자동차가 인터페이스 하나가 너무 크니깐 운전이랑 정비로 따로 나누는 것이다.&lt;/p&gt;

    &lt;p&gt;그럼 사용자 인터페이스도 나눌 수 있다!&lt;/p&gt;

    &lt;p&gt;인터페이스가 명확해지고 대체 가능성이 높아진다.&lt;/p&gt;

    &lt;p&gt;&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;-dip-의존관계-역전-원칙--️중요&quot;&gt;📝 DIP: 의존관계 역전 원칙  ✔️중요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;쉽게 말하면 클라이언트 코드가 구현 클래스를 바라보지 말고 인터페이스만 바라보자라는 것이다.&lt;/li&gt;
  &lt;li&gt;역할과 구현을 철저하게 분리해서 시스템을 언제가 갈아 끼울 수 있도록 만드는 것이다.&lt;/li&gt;
  &lt;li&gt;역할(Role)에 의존해야 한다. 클라이언트가 인터페이스에 의존해야 한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;여기까지 정리,&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;객체 지향의 핵심은 다형성&lt;/li&gt;
  &lt;li&gt;다형성 만으로는 쉽게 부품을 갈아 끼우듯이 개발할 수 없다.&lt;/li&gt;
  &lt;li&gt;다형성 만으로는 구현 객체를 변경할 때 클라이언트 코드도 함께 변경된다.&lt;/li&gt;
  &lt;li&gt;다형성 만으로는 OCP, DIP를 지킬 수 없다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;그렇다면 어떻게 해야하는가?&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;4-객체-지향-설계와-스프링&quot;&gt;4. 객체 지향 설계와 스프링&lt;/h2&gt;

&lt;h3 id=&quot;스프링이야기에-왜-객체-지향-이야기가-나오는가&quot;&gt;스프링이야기에 왜 객체 지향 이야기가 나오는가?&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;스프링은 다음 기술로 다형성 + OCP, DIP를 가능하게 지원&lt;/li&gt;
  &lt;li&gt;DI(Dependency Injection): 의존관계, 의존성 주입&lt;/li&gt;
  &lt;li&gt;DI 컨테이너 제공&lt;/li&gt;
  &lt;li&gt;클라이언트 코드의 변경 없이 기능 확장&lt;/li&gt;
  &lt;li&gt;쉽게 부품을 교체하듯이 개발&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;그렇기 때문에 스프링을 사용 하는 것이다!&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;5-최종-정리&quot;&gt;5. 최종 정리&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;모든 설계에 역할과 구현을 분리하자.&lt;/li&gt;
  &lt;li&gt;자동차, 공연의 예를 떠올려보자.&lt;/li&gt;
  &lt;li&gt;애플리케이션 설계도 공연을 설계 하듯이 배역만 만들어두고, 배우는 언제든지 유연하게 변경할 수 있도록 만드는 것이 좋은 객체 지향 설계다.&lt;/li&gt;
  &lt;li&gt;이상적으로는 모든 설계에 인터페이스를 부여하자&lt;/li&gt;
  &lt;li&gt;변경의 범위가 작고 유연해진다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;하지만, 인터페이스를 도입하면 추상화 비용이 발생한다.&lt;/p&gt;

&lt;p&gt;추상화가 되면 개발자가 한번 더 코드를 열어서 구현 케이스가 무엇인지 한번 더 봐야 한다.&lt;/p&gt;

&lt;p&gt;즉, 장점이 단점이 늘어날 때 적용하는 게 좋다.&lt;/p&gt;

&lt;p&gt;(확장 가능성이 없으면 인터페이스를 없이 그대로 쓰고, 나중에 리팩토링을 하는 것도 하나의 방법이다.)&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;🌿 인프런 &lt;a href=&quot;https://www.inflearn.com/course/%EC%8A%A4%ED%94%84%EB%A7%81-%ED%95%B5%EC%8B%AC-%EC%9B%90%EB%A6%AC-%EA%B8%B0%EB%B3%B8%ED%8E%B8&quot; target=&quot;_blank&quot;&gt;스프링 핵심 원리 기본편: 김영한&lt;/a&gt; 님의 강의를 듣고 정리한 내용입니다.&lt;/p&gt;</content><author><name>Han Juhui</name></author><category term="Spring 강의" /><summary type="html">🌿 스프링 핵심 원리/기본편:강의 정리1</summary></entry><entry><title type="html">[Daily] github.io 블로그 시작하기</title><link href="http://localhost:4000/daily/start/" rel="alternate" type="text/html" title="[Daily] github.io 블로그 시작하기" /><published>2021-12-01T00:00:00+00:00</published><updated>2021-12-01T13:06:00+00:00</updated><id>http://localhost:4000/daily/start</id><content type="html" xml:base="http://localhost:4000/daily/start/">&lt;p&gt;12월을 시작하면서 블로그를 다시 처음 부터 시작하려고 한다.&lt;/p&gt;

&lt;p&gt;죽이 되든 밥이 되든 여기가 내 평생 정착지가 되어야만 한다.✨&lt;/p&gt;

&lt;p&gt;Github.io는 재밌으면서도 귀찮으면서도 뿌듯함이 공존하는 블로그다.&lt;/p&gt;

&lt;p&gt;일년 뒤에 돌아봤을 때에는 성실함이 묻어나는 블로그가 되길 소망한다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;아직 댓글기능이랑, 글 날짜 보여주기, About 페이지 등등 좀 더 고쳐나가야 할게 많다.&lt;/p&gt;

&lt;p&gt;부담가지지 말고 한개씩 추가해야겠다… 😂&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;일단 올해 남은 한달 동안은 알고리즘 강의랑, Spring 강의를 들을 계획이다. (&lt;del&gt;토익도 해야하는데&lt;/del&gt;)&lt;/p&gt;

&lt;p&gt;한달 뒤에 이 글이 많이많이 뒤에 있었으면 좋겠다! ^^&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;</content><author><name>Han Juhui</name></author><category term="Daily" /><summary type="html">하나 둘 씩 정리해봅시다✨</summary></entry></feed>